<?php
/**
 * Generated by Haxe 4.3.3
 */

namespace Src\Infrastructure;

use \php\Boot;
use \haxe\Exception;

class BaseItem {
	/**
	 * @var float
	 */
	public $price;
	/**
	 * @var float
	 */
	public $quantity;
	/**
	 * @var float
	 */
	public $totalGrossPrice;

	/**
	 * @return void
	 */
	public function __construct () {
		#src/infrastructure/BaseItem.hx:8: characters 37-38
		$this->totalGrossPrice = 0;
		#src/infrastructure/BaseItem.hx:7: characters 30-31
		$this->quantity = 1;
		#src/infrastructure/BaseItem.hx:6: characters 27-28
		$this->price = 0;
	}

	/**
	 * @param float $price
	 * 
	 * @return void
	 */
	public function addPrice ($price) {
		#src/infrastructure/BaseItem.hx:11: characters 3-21
		$this->price = $price;
	}

	/**
	 * @param int $quantity
	 * 
	 * @return void
	 */
	public function addQuantity ($quantity) {
		#src/infrastructure/BaseItem.hx:15: characters 3-27
		$this->quantity = $quantity;
	}

	/**
	 * @return void
	 */
	public function calculateTotalGrossPriceItem () {
		#src/infrastructure/BaseItem.hx:19: lines 19-21
		if (Boot::equal($this->price, 0)) {
			#src/infrastructure/BaseItem.hx:20: characters 4-9
			throw Exception::thrown("Price is missing");
		}
		#src/infrastructure/BaseItem.hx:23: characters 3-52
		$this->totalGrossPrice = $this->price * $this->quantity;
	}
}

Boot::registerClass(BaseItem::class, 'src.infrastructure.BaseItem');
