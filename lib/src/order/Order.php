<?php
/**
 * Generated by Haxe 4.3.4
 */

namespace src\order;

use \php\Boot;
use \src\infrastructure\Helper;

class Order extends Helper {
	/**
	 * @var float
	 */
	public $couponFixedDiscountToBeApplied;
	/**
	 * @var float
	 */
	public $couponPercentageDiscountToBeApplied;
	/**
	 * @var float
	 */
	public $deliveryFee;
	/**
	 * @var float
	 */
	public $deliveryFeeFixedDiscountToBeApplied;
	/**
	 * @var float
	 */
	public $deliveryFeePercentageToBeApplied;
	/**
	 * @var float
	 */
	public $paymentMethodFixedAddition;
	/**
	 * @var float
	 */
	public $paymentMethodFixedDiscount;
	/**
	 * @var float
	 */
	public $paymentMethodPercentageAddition;
	/**
	 * @var float
	 */
	public $paymentMethodPercentageDiscount;
	/**
	 * @var float
	 */
	public $percentageServiceFee;
	/**
	 * @var float
	 */
	public $posFixedAdditionToBeApplied;
	/**
	 * @var float
	 */
	public $posFixedDiscountToBeApplied;
	/**
	 * @var float
	 */
	public $posPercentageAdditionToBeApplied;
	/**
	 * @var float
	 */
	public $posPercentageDiscountToBeApplied;
	/**
	 * @var object[]|\Array_hx
	 */
	public $products;
	/**
	 * @var float
	 */
	public $totalWithoutOperations;

	/**
	 * @return void
	 */
	public function __construct () {
		#src/order/Order.hx:30: characters 44-45
		$this->totalWithoutOperations = 0;
		#src/order/Order.hx:28: characters 57-58
		$this->deliveryFeeFixedDiscountToBeApplied = 0;
		#src/order/Order.hx:27: characters 54-55
		$this->deliveryFeePercentageToBeApplied = 0;
		#src/order/Order.hx:25: characters 53-54
		$this->paymentMethodPercentageDiscount = 0;
		#src/order/Order.hx:24: characters 48-49
		$this->paymentMethodFixedDiscount = 0;
		#src/order/Order.hx:22: characters 53-54
		$this->paymentMethodPercentageAddition = 0;
		#src/order/Order.hx:21: characters 48-49
		$this->paymentMethodFixedAddition = 0;
		#src/order/Order.hx:19: characters 54-55
		$this->posPercentageDiscountToBeApplied = 0;
		#src/order/Order.hx:18: characters 49-50
		$this->posFixedDiscountToBeApplied = 0;
		#src/order/Order.hx:16: characters 54-55
		$this->posPercentageAdditionToBeApplied = 0;
		#src/order/Order.hx:15: characters 49-50
		$this->posFixedAdditionToBeApplied = 0;
		#src/order/Order.hx:13: characters 57-58
		$this->couponPercentageDiscountToBeApplied = 0;
		#src/order/Order.hx:12: characters 52-53
		$this->couponFixedDiscountToBeApplied = 0;
		#src/order/Order.hx:10: characters 42-43
		$this->percentageServiceFee = 0;
		#src/order/Order.hx:9: characters 33-34
		$this->deliveryFee = 0;
		#src/order/Order.hx:8: characters 24-26
		$this->products = new \Array_hx();
	}

	/**
	 * @param float $fixedPrice
	 * 
	 * @return void
	 */
	public function addCouponFixedDiscount ($fixedPrice) {
		#src/order/Order.hx:47: characters 3-51
		$this->couponFixedDiscountToBeApplied = $fixedPrice;
	}

	/**
	 * @param float $percentagePrice
	 * 
	 * @return void
	 */
	public function addCouponPercentageDiscount ($percentagePrice) {
		#src/order/Order.hx:43: characters 3-61
		$this->couponPercentageDiscountToBeApplied = $percentagePrice;
	}

	/**
	 * @param float $deliveryFee
	 * 
	 * @return void
	 */
	public function addDeliveryFee ($deliveryFee) {
		#src/order/Order.hx:39: characters 3-33
		$this->deliveryFee = $deliveryFee;
	}

	/**
	 * @param float $fixedPrice
	 * 
	 * @return void
	 */
	public function addDeliveryFeeFixedDiscount ($fixedPrice) {
		#src/order/Order.hx:91: characters 3-56
		$this->deliveryFeeFixedDiscountToBeApplied = $fixedPrice;
	}

	/**
	 * @param float $percentagePrice
	 * 
	 * @return void
	 */
	public function addDeliveryFeePercentageDiscount ($percentagePrice) {
		#src/order/Order.hx:87: characters 3-58
		$this->deliveryFeePercentageToBeApplied = $percentagePrice;
	}

	/**
	 * @param float $fixedPrice
	 * 
	 * @return void
	 */
	public function addPaymentMethodFixedAddition ($fixedPrice) {
		#src/order/Order.hx:79: characters 3-47
		$this->paymentMethodFixedAddition = $fixedPrice;
	}

	/**
	 * @param float $fixedPrice
	 * 
	 * @return void
	 */
	public function addPaymentMethodFixedDiscount ($fixedPrice) {
		#src/order/Order.hx:71: characters 3-47
		$this->paymentMethodFixedDiscount = $fixedPrice;
	}

	/**
	 * @param float $percentagePrice
	 * 
	 * @return void
	 */
	public function addPaymentMethodPercentageAddition ($percentagePrice) {
		#src/order/Order.hx:75: characters 3-57
		$this->paymentMethodPercentageAddition = $percentagePrice;
	}

	/**
	 * @param float $percentagePrice
	 * 
	 * @return void
	 */
	public function addPaymentMethodPercentageDiscount ($percentagePrice) {
		#src/order/Order.hx:67: characters 3-57
		$this->paymentMethodPercentageDiscount = $percentagePrice;
	}

	/**
	 * @param float $fixedPrice
	 * 
	 * @return void
	 */
	public function addPercentageServiceFee ($fixedPrice) {
		#src/order/Order.hx:83: characters 3-41
		$this->percentageServiceFee = $fixedPrice;
	}

	/**
	 * @param float $fixedPrice
	 * 
	 * @return void
	 */
	public function addPosFixedAddition ($fixedPrice) {
		#src/order/Order.hx:63: characters 3-48
		$this->posFixedAdditionToBeApplied = $fixedPrice;
	}

	/**
	 * @param float $fixedPrice
	 * 
	 * @return void
	 */
	public function addPosFixedDiscount ($fixedPrice) {
		#src/order/Order.hx:55: characters 3-48
		$this->posFixedDiscountToBeApplied = $fixedPrice;
	}

	/**
	 * @param float $percentagePrice
	 * 
	 * @return void
	 */
	public function addPosPercentageAddition ($percentagePrice) {
		#src/order/Order.hx:59: characters 3-58
		$this->posPercentageAdditionToBeApplied = $percentagePrice;
	}

	/**
	 * @param float $percentagePrice
	 * 
	 * @return void
	 */
	public function addPosPercentageDiscount ($percentagePrice) {
		#src/order/Order.hx:51: characters 3-58
		$this->posPercentageDiscountToBeApplied = $percentagePrice;
	}

	/**
	 * @param object $product
	 * 
	 * @return void
	 */
	public function addProduct ($product) {
		#src/order/Order.hx:35: characters 3-30
		$_this = $this->products;
		$_this->arr[$_this->length++] = $product;
	}

	/**
	 * @param float $totalWithoutOperations
	 * 
	 * @return void
	 */
	public function addTotalWithoutOperations ($totalWithoutOperations) {
		#src/order/Order.hx:99: characters 3-55
		$this->totalWithoutOperations = $totalWithoutOperations;
	}

	/**
	 * @return float
	 */
	public function calculateTotalGrossPrice () {
		#src/order/Order.hx:107: characters 3-33
		$totalGrossPrice = 0;
		#src/order/Order.hx:109: lines 109-111
		$result = [];
		$data = $this->products->arr;
		$_g_current = 0;
		$_g_length = \count($data);
		$_g_data = $data;
		while ($_g_current < $_g_length) {
			$item = $_g_data[$_g_current++];
			$result[] = ($totalGrossPrice += $item->calculateTotalGrossPrice());
		}
		\Array_hx::wrap($result);
		#src/order/Order.hx:113: characters 3-25
		return $totalGrossPrice;
	}

	/**
	 * @return float
	 */
	public function calculateTotalNetPrice () {
		#src/order/Order.hx:117: characters 3-63
		$totalGrossPrice = $this->calculateTotalGrossPrice();
		#src/order/Order.hx:118: characters 3-39
		$totalNetPrice = $totalGrossPrice;
		#src/order/Order.hx:120: characters 3-63
		$this->deliveryFee -= $this->deliveryFeeFixedDiscountToBeApplied;
		#src/order/Order.hx:122: characters 3-7
		$tmp = $this;
		#src/order/Order.hx:122: characters 3-97
		$tmp->deliveryFee = $tmp->deliveryFee - $this->calculePercentage($this->deliveryFee, $this->deliveryFeePercentageToBeApplied);
		#src/order/Order.hx:124: characters 3-36
		$totalNetPrice += $this->deliveryFee;
		#src/order/Order.hx:126: characters 3-55
		$totalNetPrice -= $this->couponFixedDiscountToBeApplied;
		#src/order/Order.hx:128: characters 3-94
		$totalNetPrice -= $this->calculePercentage($totalNetPrice, $this->couponPercentageDiscountToBeApplied);
		#src/order/Order.hx:130: characters 3-52
		$totalNetPrice += $this->posFixedAdditionToBeApplied;
		#src/order/Order.hx:132: characters 3-91
		$totalNetPrice += $this->calculePercentage($totalNetPrice, $this->posPercentageAdditionToBeApplied);
		#src/order/Order.hx:134: characters 3-52
		$totalNetPrice -= $this->posFixedDiscountToBeApplied;
		#src/order/Order.hx:136: characters 3-91
		$totalNetPrice -= $this->calculePercentage($totalNetPrice, $this->posPercentageDiscountToBeApplied);
		#src/order/Order.hx:138: characters 3-48
		$this->addTotalWithoutOperations($totalNetPrice);
		#src/order/Order.hx:140: characters 3-51
		$totalNetPrice += $this->paymentMethodFixedAddition;
		#src/order/Order.hx:142: characters 3-90
		$totalNetPrice += $this->calculePercentage($totalNetPrice, $this->paymentMethodPercentageAddition);
		#src/order/Order.hx:144: characters 3-51
		$totalNetPrice -= $this->paymentMethodFixedDiscount;
		#src/order/Order.hx:146: characters 3-90
		$totalNetPrice -= $this->calculePercentage($totalNetPrice, $this->paymentMethodPercentageDiscount);
		#src/order/Order.hx:148: characters 3-81
		$totalNetPrice += $this->calculePercentage($totalGrossPrice, $this->percentageServiceFee);
		#src/order/Order.hx:150: lines 150-152
		if ($totalNetPrice < 0) {
			#src/order/Order.hx:151: characters 4-21
			$totalNetPrice = 0;
		}
		#src/order/Order.hx:157: characters 3-47
		return $this->formatReturnToPHP($totalNetPrice);
	}

	/**
	 * @param float $total
	 * @param float $percentage
	 * 
	 * @return float
	 */
	public function calculePercentage ($total, $percentage) {
		#src/order/Order.hx:103: characters 3-38
		return $total * ($percentage / 100);
	}

	/**
	 * @return float
	 */
	public function getTotalWithoutOperations () {
		#src/order/Order.hx:95: characters 3-37
		return $this->totalWithoutOperations;
	}
}

Boot::registerClass(Order::class, 'src.order.Order');
